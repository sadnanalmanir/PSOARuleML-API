<?xml version="1.0" encoding="UTF-8"?><project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.ruleml.psoa</groupId>
  <artifactId>psoaruleml-api</artifactId>
  <version>1.0</version>
  <packaging>jar</packaging>
  <name>PSOARuleML-API</name>
  <description>A Java API which uses JAXB library to create abstract syntax objects 
      from the XML schemas based on PSOA RuleML/XML language and converts
      the RuleML/XML syntax into PSOA Presetation Syntax.
  </description>    
  <licenses>
      <license>
          <name>GPLv3</name>
          <url>http://www.gnu.org/licenses/gpl-3.0.html</url>
      </license>
  </licenses>
  <url>https://github.com/sadnanalmanir/PSOARuleML-API</url>
  <developers>
      <developer>
          <id>sadnanalmanir</id>
          <name>Mohammad Sadnan Al Manir</name>
          <email>sadnanalmanir@gmail.com</email>
          <organization>University of New Brunswick, Saint John</organization>
          <organizationUrl>http://www2.unb.ca/csas/</organizationUrl>
      </developer>
  </developers>
  <scm>
      <connection>scm:git:git@github.com:sadnanalmanir/PSOARuleML-API.git</connection>
      <developerConnection>scm:git:git@github.com:sadnanalmanir/PSOARuleML-API.git</developerConnection>
      <url>https://github.com/sadnanalmanir/PSOARuleML-API.git</url>
  </scm>
  <build>
		<finalName>psoaruleml-api</finalName>
		<plugins>

			<!-- Enforce JVM compatibility of sources and binaries. -->
			<plugin>
                                <groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
                                <version>3.2</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>
			<!-- Enforce JVM version used for build -->
			<!--plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>enforce-versions</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<requireJavaVersion>
									<version>[1.4,)</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin-->

			<!--
				Produce also dbunit-embeddedderby-parenttest-sources.jar when
				packaging.
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
                                <version>2.4</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Produce ZIP with dependencies and samples. -->
			<!--plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.3</version>
				<executions>
					<execution>
						<id>assemble-zip</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<descriptors>
						<descriptor>maven-assembly-dist.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin-->

			<!--
				Release Plugin (Update version in POM before/after release, create
				tag, deploy) to try: mvn release:prepare -DdryRun=true && mvn
				release:clean to perform:

				mvn release:prepare release:perform

				Read http://nexus.sonatype.org/oss-repository-hosting.html#3 for
				instructions on releasing to this project's Sonatype repository
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.1</version>
			</plugin>



		</plugins>
	</build>

	<distributionManagement>
		<!-- My project's Sonatype repository to be used by the release plugin -->
		<repository>
			<id>nexus-releases</id>
			<name>Nexus Release Repository</name>
			<url>http://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<!--repositories>
		<repository>
			<id>ibiblio.org</id>
			<name>ibiblio Mirror of http://repo1.maven.org/maven2/</name>
			<url>http://mirrors.ibiblio.org/pub/mirrors/maven2</url>
		</repository>
	</repositories-->

	<profiles>

		<profile>
			<id>release-sign-artifacts</id>

			<activation>
				<property>
					<!--
						will be set by the release plugin upon performing mvn
						release:perform
					-->
					<name>performRelease</name>
					<value>true</value>
				</property>
			</activation>

			<properties>
				<gpg.keyname>7B02AFDF</gpg.keyname>	<!-- GPG Key ID to use for signing -->
				<release.username>sadnanalmanir</release.username> <!-- username for our svn repository -->
			</properties>

			<build>
				<plugins>
					<!--
						Enable signing of the artifacts For gpg:sign-and-deploy-file it's
						necessary to have a <server> with the repositoryId provided or
						id="remote-repository" defined in settings.xml (it contains the
						repository's login, psw) Signing: mvn gpg:sign-and-deploy-file
						-DpomFile=target/myapp-1.0.pom \ > -Dfile=target/myapp-1.0.jar \ >
						-Durl=http://oss.sonatype.org/content/repositories/malyvelky/ \ >
						-DrepositoryId=sonatype_oss Note normally it uses the defaul key
						but we can ovveride it by either setting the property gpg.keyname
						(done in this POM) or by providing -Dkeyname=66AE163A on the
						command line. OR directly w/ gpg: gpg -u 66AE163A - -sign -
						-detach-sign -a target/dbunit-embeddedderby-parenttest.jar Note:
						"mvn gpg:sign" results in NPE with v 1.o-a.-4, use "mvn package
						gpg:sign" instead; see the issue MGPG-18
					-->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>

		</profile>

	</profiles>

</project>